{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"firewallName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the firewall.  This name will have a number appended to the end of it (i.e. if you enter PaloAlto as the FW Name, each firewall will be deployed as: PaloAlto0, PaloAlto1, PaloAlto2, etc.)"
			},
			"defaultValue": "PaloAlto"
		},
		"numberOfFirewalls": {
			"type": "int",
			"minValue": 1,
			"maxValue": 5,
			"defaultValue": 2,
			"metadata": {
				"description": "Select the number of VM-Series firewalls to deploy.  Minimum is 1, maximum is 5."
			}
		},
		"virtualMachineSize": {
			"type": "string",
			"defaultValue": "Standard_D3_v2",
			"allowedValues": [
				"Standard_D3",
				"Standard_D4",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_A4",
				"Standard_DS3_v2",
				"Standard_DS4_v2"
			]
		},
		"imageSku": {
			"type": "string",
			"defaultValue": "byol",
			"metadata": {
				"description": "Select BYOL, PAYG-Bundle1, or PAYG-Bundle2 (more info: https://azuremarketplace.microsoft.com/en-us/marketplace/apps/paloaltonetworks.vmseries-ngfw?tab=PlansAndPrice)"
			},
			"allowedValues": [
				"byol",
				"bundle1",
				"bundle2"
			]
		},
		"imageVersion": {
			"type": "string",
			"defaultValue": "latest",
			"allowedValues": [
				"latest",
				"8.0.0",
				"7.1.1"
			],
			"metadata": {
				"description": "Select the PAN-OS version to run.  Current recommended release is PAN-OS 8.0.7"
			}
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Enter username for the firewall's administrator account."
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Enter password for the firewall's administrator account."
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Unmanaged-Storage-Account",
			"allowedValues": [
				"New Unmanaged Storage Account",
				"Existing Unmanaged Storage Account",
				"Managed Storage"
			],
			"metadata": {
				"Description": "Select 'Unmanaged-Disk' to deploy OS disk to new unmanaged storage account. Select 'Managed-Disk' to deploy OS disk to a managed disk."
			}
		},
		"storageAccountResourceGroup": {
			"type": "string",
			"metadata": {
				"description": "Enter the resource group of the new or existing storage account."
			}
		},
		"storageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of your existing or new storage account name.  This value must be globally unique."
			}
		},
		"osDiskStorageType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Standard or Premium storage for OS disk (more info: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage) "
			}
		},
		"newOrExistingAvailabilitySet": {
			"type": "string",
			"allowedValues": [
				"Create a new availability set",
				"Add firewall(s) to existing availability set"
			],
			"metadata": {
				"description": "Standard or Premium storage for OS disk (more info: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage) "
			}
		},
		"availabilitySetName": {
			"type": "string",
			"defaultValue": "Firewall-AV-Set",
			"metadata": {
				"description": "Enter the name for the availability set that the firewall(s) will be placed in."
			}
		},
		"availabilitySetUpdateDomainCount": {
			"type": "int",
			"defaultValue": 5,
			"metadata": {
				"description": "Enter the availability set's update domain count.  Default is 5."
			}
		},
		"availabilitySetFaultDomainCount": {
			"type": "int",
			"defaultValue": 3,
			"metadata": {
				"description": "Enter the availability set's fault domain count.  Default is 3."
			}
		},
		"virtualNetworkName": {
			"type": "string",
			"metadata": {
				"description": "Enter the existing VNET name to deploy the firewalls"
			}
		},
		"virtualNetworkResourceGroup": {
			"type": "string",
			"metadata": {
				"description": "Enter the VNET's existing resource group name"
			}
		},
		"mgmtSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the existing subnet where the firewall's management interface will reside"
			}
		},
		"untrustSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the existing subnet where the firewall's untrust interface will reside."
			}
		},
		"trustSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the existing subnet where the firewall's trust interface will reside."
			}
		},
		"applyPublicIpToMgmtNic": {
			"type": "string",
			"allowedValues": [
				"Yes",
				"No"
			],
			"metadata": {
				"description": "Select Yes to add a public IP to the firewall(s) management NICs."
			}
		},
		"mgmtPublicNicName": {
			"type": "string",
			"defaultValue": "mgmt-pip",
			"metadata": {
				"description": "Enter the name of the management NIC.  In the Azure portal name will appear as [yourentry]-firewallname#"
			}
		},
		"mgmtDNSLabelPrefix": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of DNS label for the public IP's management address.  This must be a globally unique name."
			}
		},
		"mgmtNicName": {
			"type": "string",
			"defaultValue": "mgmt-nic",
			"metadata": {
				"description": "Enter the name of the management NIC.  In the Azure portal name will appear as [yourentry]-firewallname#"
			}
		},
		"untrustNicName": {
			"type": "string",
			"defaultValue": "untrust-nic",
			"metadata": {
				"description": "Enter the name for the firewall's untrust NIC.  In the Azure portal name will appear as [yourentry]-firewallname#"
			}
		},
		"trustNicName": {
			"type": "string",
			"defaultValue": "trust-nic",
			"metadata": {
				"description": "Enter the name for the firewall's trust NIC.  In the Azure portal, the name will appear as [yourentry]-firewallname#"
			}
		},
		"createNewInternalLB": {
			"type": "string",
			"allowedValues": [
				"Create-New-LB",
				"Use-Existing-LB",
				"Do-Not-Use-LB"
			],
			"metadata": {
				"description": "Select 'Yes' to deploy new Public LB.  Public LB will use the Untrust NICs of the firewalls as its backend pool."
			}
		},
		"internalLBName": {
			"type": "string",
			"defaultValue": "Internal-Standard-LB",
			"metadata": {
				"description": "Enter the name for the internal standard load balancer."
			}
		},
		"internalLBFrontendName": {
			"type": "string",
			"defaultValue": "Internal-LB-Frontend",
			"metadata": {
				"description": "Enter the name for the internal load balancer's front end IP."
			}
		},
		"internalLBSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Enter the subnet that will contain the internal load balancer's front end IP."
			}
		},
		"internalLBFrontendIP": {
			"type": "string",
			"metadata": {
				"description": "Enter the load balancer's front end IP address.  Must be in the same subnet as the 'Internal LB Subnet Name'"
			}
		},
		"internalLBBackendPoolName": {
			"type": "string",
			"defaultValue": "Internal-LB-Backend-Pool",
			"metadata": {
				"description": "Enter the name for the load balancer's backend pool.  The backend pool will be assigned to the firewall(s) trust interfaces."
			}
		},
		"internalLBHealthProbeName": {
			"type": "string",
			"defaultValue": "Internal-LB-Health-Probe-22",
			"metadata": {
				"description": "Enter the name for the load balancer's health probe."
			}
		},
		"internalLBHealthProbePort": {
			"type": "int",
			"defaultValue": 22,
			"metadata": {
				"description": "Enter the TCP port that the health probe will use to monitor the firewall(s)."
			}
		},
		"internalLBRuleName": {
			"type": "string",
			"defaultValue": "HA-Ports",
			"metadata": {
				"description": "Enter a the name for the load balancer's rule.  This rule enables HA ports."
			}
		},
		"createNewPublicLB": {
			"type": "string",
			"allowedValues": [
				"Create-New-LB",
				"Use-Existing-LB",
				"Do-Not-Use-LB"
			],
			"metadata": {
				"description": "Select 'Yes' to deploy new Public LB.  Public LB will use the Untrust NICs of the firewalls as its backend pool."
			}
		},
		"publicLBName": {
			"type": "string",
			"defaultValue": "Public-LB",
			"metadata": {
				"description": "Enter the name for the internal standard load balancer."
			}
		},
		"publicLBFrontendName": {
			"type": "string",
			"defaultValue": "Public-LB-Frontend",
			"metadata": {
				"description": "Enter the name for the internal load balancer's front end IP."
			}
		},
		"publicLBPublicIpName": {
			"type": "string",
			"defaultValue": "Public-LB-PIP",
			"metadata": {
				"description": "Enter the name for the public IP associated with the Public Load Balancer."
			}
		},
		"publicLBBackendPoolName": {
			"type": "string",
			"defaultValue": "Palo-Untrust-Pool",
			"metadata": {
				"description": "Enter the name for the load balancer's backend pool.  The backend pool will be assigned to the firewall(s) untrust interfaces."
			}
		},
		"publicLBHealthProbeName": {
			"type": "string",
			"defaultValue": "Public-LB-Health-Probe-TCP-22",
			"metadata": {
				"description": "Enter the name for the load balancer's health probe."
			}
		},
		"publicLBHealthProbePort": {
			"type": "int",
			"defaultValue": 22,
			"metadata": {
				"description": "Enter the TCP port that the health probe will use to monitor the firewall(s)."
			}
		},
		"publicLBRuleName": {
			"type": "string",
			"defaultValue": "Allow-TCP-22",
			"metadata": {
				"description": "Enter a the name for the load balancer's rule."
			}
		},
		"publicLBRuleFrontendPort": {
			"type": "int",
			"defaultValue": 22,
			"metadata": {
				"description": "Enter the frontend port (TCP) that will be used in the load balancer's rule."
			}
		},
		"publicLBRuleBackendPort": {
			"type": "int",
			"defaultValue": 22,
			"metadata": {
				"description": "Enter the backend port (TCP) that will be used in the load balancer's rule."
		}
	},
	"variables": {
		"vnetId": "[resourceId(parameters('virtualNetworkResourceGroup'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
		"mgmtSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('mgmtSubnetName'))]",
		"untrustSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('untrustSubnetName'))]",
		"trustSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('trustSubnetName'))]",
		"mgmtPublicNicNameRef": "[concat(parameters('mgmtPublicNicName'),'-',parameters('firewallName'))]",
		"mgmtNicNameRef": "[concat(parameters('mgmtNicName'),'-',parameters('firewallName'))]",
		"untrustNicNameRef": "[concat(parameters('untrustNicName'),'-',parameters('firewallName'))]",
		"trustNicNameRef": "[concat(parameters('trustNicName'),'-',parameters('firewallName'))]",
		"imagePublisher": "paloaltonetworks",
		"imageOffer": "vmseries1",
		"internalLBProbeProtocol": "TCP",
		"_artifactsLocationSasToken": "",
		"_artifactsLocation": "https://raw.githubusercontent.com/mattmclimans/PaloAltoNetworks/master/azure/nested/",
		"deployMgmtPIP_templateUri": "[concat(variables('_artifactsLocation'), 'nic-PublicIP.json', variables('_artifactsLocationSasToken'))]",
		"deployInternalLB_templateUri": "[concat(variables('_artifactsLocation'), 'nic-',parameters('createNewInternalLB'), '.json', variables('_artifactsLocationSasToken'))]",
		"deployPublicLB_templateUri": "[concat(variables('_artifactsLocation'), 'nic-',parameters('createNewPublicLB'), '.json', variables('_artifactsLocationSasToken'))]",
		"deployPaloAlto_templateUri": "[concat(variables('_artifactsLocation'),'paloalto-', parameters('storageAccountType'),'.json', variables('_artifactsLocationSasToken'))]",
		"managedPaloAlto_templateUri": "[concat(variables('_artifactsLocation'),'paloalto-managed.json', variables('_artifactsLocationSasToken'))]",
		"unmanagedPaloAlto_templateUri": "[concat(variables('_artifactsLocation'),'paloalto-unmanaged.json', variables('_artifactsLocationSasToken'))]",
		"storageAccountId": "[resourceId(parameters('storageAccountResourceGroup'),'Microsoft.Storage/StorageAccounts',parameters('storageAccountName'))]"
	},
	"resources": [
		{
			"condition": "[equals(parameters('storageAccountType'), 'New Unmanaged Storage Account')]",
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[parameters('storageAccountName')]",
			"apiVersion": "2015-06-15",
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[parameters('osDiskStorageType')]"
			}
		}, 
		{
			"condition": "[equals(parameters('newOrExistingAvailabilitySet'), 'Create a new availability set')]",
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[parameters('availabilitySetName')]",
			"apiVersion": "2016-08-30",
			"location": "[resourceGroup().location]",
			"properties": {
				"platformFaultDomainCount": "[parameters('availabilitySetFaultDomainCount')]",
				"platformUpdateDomainCount": "[parameters('availabilitySetUpdateDomainCount')]"
			},
			"sku": {
				"name": "[if(equals(parameters('storageAccountType'), 'Managed Storage'), 'Aligned', 'Classic')]"
			}
		},
		{
			"condition": "[equals(parameters('createNewPublicLB'), 'Create-New-LB')]",
			"type": "Microsoft.Network/loadBalancers",
			"name": "[parameters('publicLBName')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[parameters('publicLBPublicIpName')]"
			],
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[parameters('publicLBFrontendName')]",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicLBPublicIpName'))]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[parameters('publicLBBackendPoolName')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[parameters('publicLBRuleName')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('publicLBName')), '/frontendIpConfigurations/', parameters('publicLBFrontendName'))]"
							},
							"frontendPort": "[parameters('publicLBRuleFrontendPort')]",
							"backendPort": "[parameters('publicLBRuleBackendPort')]",
							"enableFloatingIP": false,
							"idleTimeoutInMinutes": 4,
							"protocol": "Tcp",
							"loadDistribution": "Default",
							"disableOutboundSnat": false,
							"backendAddressPool": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('publicLBName')), '/backendAddressPools/', parameters('publicLBBackendPoolName'))]"
							},
							"probe": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('publicLBName')), '/probes/', parameters('publicLBHealthProbeName'))]"
							}
						}
					}
				],
				"probes": [
					{
						"name": "[parameters('publicLBHealthProbeName')]",
						"properties": {
							"protocol": "TCP",
							"port": "[parameters('publicLBHealthProbePort')]",
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				],
				"inboundNatRules": [],
				"outboundNatRules": [],
				"inboundNatPools": []
			}
		},  
		{
			"condition": "[equals(parameters('createNewInternalLB'), 'Create-New-LB')]",
			"type": "Microsoft.Network/loadBalancers",
			"name": "[parameters('internalLBName')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[parameters('internalLBFrontendName')]",
						"properties": {
							"privateIPAddress": "[parameters('internalLBFrontendIP')]",
							"privateIPAllocationMethod": "Static",
							"subnet": {
								"id": "[concat(variables('vnetId'), '/subnets/', parameters('internalLBSubnetName'))]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[parameters('internalLBBackendPoolName')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[parameters('internalLBRuleName')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), '/frontendIpConfigurations/', parameters('internalLBFrontendName'))]"
							},
							"frontendPort": 0,
							"backendPort": 0,
							"enableFloatingIP": true,
							"idleTimeoutInMinutes": 4,
							"protocol": "All",
							"loadDistribution": "Default",
							"disableOutboundSnat": false,
							"backendAddressPool": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), '/backendAddressPools/', parameters('internalLBBackendPoolName'))]"
							},
							"probe": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), '/probes/', parameters('internalLBHealthProbeName'))]"
							}
						}
					}
				],
				"probes": [
					{
						"name": "[parameters('internalLBHealthProbeName')]",
						"properties": {
							"protocol": "[variables('internalLBProbeProtocol')]",
							"port": "[parameters('internalLBHealthProbePort')]",
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				],
				"inboundNatRules": [],
				"outboundNatRules": [],
				"inboundNatPools": []
			}
		}, 
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('publicLBPublicIpName')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"publicIPAddressVersion": "IPv4",
				"publicIPAllocationMethod": "Static",
				"idleTimeoutInMinutes": 4
			},
			"dependsOn": []
		}, 
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('mgmtNicNameRef'),copyindex())]",
			"apiVersion": "2016-03-30",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "mgmtNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('mgmtSubnetRef')]"
							}
						}
					}
				]
			}
		}, 
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('untrustNicNameRef'),copyindex())]",
			"apiVersion": "2016-03-30",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"mgmtNicLoop"
			],
			"copy": {
				"name": "untrustNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('untrustSubnetRef')]"
							}
						}
					}
				]
			}
		}, 
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('trustNicNameRef'),copyindex())]",
			"apiVersion": "2016-03-30",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"untrustNicLoop"
			],
			"copy": {
				"name": "trustNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('trustSubnetRef')]"
							}
						}
					}
				]
			}
		}, 
		{
			"type": "Microsoft.Resources/deployments",
			"name": "[concat('updateMgmtNic',copyindex())]",
			"apiVersion": "2017-08-01",
			"dependsOn": [
				"trustNicLoop"
			],
			"copy": {
				"name": "mgmtStaticNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[if(equals(parameters('applyPublicIpToMgmtNic'), 'Yes'), variables('deployMgmtPIP_templateUri'), variables('deployPublicLB_templateUri'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"nicName": {
						"value": "[concat(variables('mgmtNicNameRef'),copyindex())]"
					},
					"subnetRef": {
						"value": "[variables('mgmtSubnetRef')]"
					},
					"privateIp": {
						"value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('mgmtNicNameRef'),copyindex())).ipConfigurations[0].properties.privateIPAddress]"
					},
					"publicIpName": {
						"value": "[concat(variables('mgmtPublicNicNameRef'),copyindex())]"
					},
					"publicIpDnsName": {
						"value": "[concat(parameters('mgmtDNSLabelPrefix'),copyindex())]"
					},
					"lbName": {
						"value": "[parameters('publicLBName')]"
					},
					"lbBackendPoolName": {
						"value": "[parameters('publicLBBackendPoolName')]"
					}
				}
			}
		}, 
		{
			"type": "Microsoft.Resources/deployments",
			"name": "[concat('updateUntrustNic',copyindex())]",
			"apiVersion": "2017-08-01",
			"dependsOn": [
				"mgmtStaticNicLoop"
			],
			"copy": {
				"name": "untrustStaticNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deployPublicLB_templateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"nicName": {
						"value": "[concat(variables('untrustNicNameRef'),copyindex())]"
					},
					"subnetRef": {
						"value": "[variables('untrustSubnetRef')]"
					},
					"privateIp": {
						"value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('untrustNicNameRef'),copyindex())).ipConfigurations[0].properties.privateIPAddress]"
					},
					"publicIpName": {
						"value": "[concat(variables('mgmtPublicNicNameRef'),copyindex())]"
					},
					"publicIpDnsName": {
						"value": "[concat(parameters('mgmtDNSLabelPrefix'),copyindex())]"
					},
					"lbName": {
						"value": "[parameters('publicLBName')]"
					},
					"lbBackendPoolName": {
						"value": "[parameters('publicLBBackendPoolName')]"
					}
				}
			}
		}, 
		{
			"type": "Microsoft.Resources/deployments",
			"name": "[concat('updateTrustNic',copyindex())]",
			"apiVersion": "2017-08-01",
			"dependsOn": [
				"untrustStaticNicLoop"
			],
			"copy": {
				"name": "trustStaticNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deployInternalLB_templateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"nicName": {
						"value": "[concat(variables('trustNicNameRef'),copyindex())]"
					},
					"subnetRef": {
						"value": "[variables('trustSubnetRef')]"
					},
					"privateIp": {
						"value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('trustNicNameRef'),copyindex())).ipConfigurations[0].properties.privateIPAddress]"
					},
					"publicIpName": {
						"value": "[concat(variables('mgmtPublicNicNameRef'),copyindex())]"
					},
					"publicIpDnsName": {
						"value": "[concat(parameters('mgmtDNSLabelPrefix'),copyindex())]"
					},
					"lbName": {
						"value": "[parameters('internalLBName')]"
					},
					"lbBackendPoolName": {
						"value": "[parameters('internalLBBackendPoolName')]"
					}
				}
			}
		}, 
		{
			"name": "[concat('updateFirewall',copyindex())]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"trustStaticNicLoop"
			],
			"copy": {
				"name": "firewallLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[if(equals(parameters('storageAccountType'), 'Managed Storage'), variables('managedPaloAlto_templateUri'), variables('unmanagedPaloAlto_templateUri'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[resourceGroup().location]"
					},
					"firewallName": {
						"value": "[concat(parameters('firewallName'),copyindex())]"
					},
					"imageSku": {
						"value": "[parameters('imageSku')]"
					},
					"imageOffer": {
						"value": "[variables('imageOffer')]"
					},
					"imageVersion": {
						"value": "[parameters('imageVersion')]"
					},
					"imagePublisher": {
						"value": "[variables('imagePublisher')]"
					},
					"mgmtNicName": {
						"value": "[concat(variables('mgmtNicNameRef'),copyindex())]"
					},
					"untrustNicName": {
						"value": "[concat(variables('untrustNicNameRef'),copyindex())]"
					},
					"trustNicName": {
						"value": "[concat(variables('trustNicNameRef'),copyindex())]"
					},
					"vmSize": {
						"value": "[parameters('virtualMachineSize')]"
					},
					"adminUserName": {
						"value": "[parameters('adminUserName')]"
					},
					"adminPassword": {
						"value": "[parameters('adminPassword')]"
					},
					"storageAccountName": {
						"value": "[parameters('storageAccountName')]"
					},
					"osDiskStorageType": {
						"value": "[parameters('osDiskStorageType')]"
					},
					"availabilitySetName": {
						"value": "[parameters('availabilitySetName')]"
					}
				}
			}
		}
	]
}
