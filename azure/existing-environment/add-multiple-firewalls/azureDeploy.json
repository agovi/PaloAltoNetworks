{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"firewallName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the firewall.  This name will have a number appended to the end of it (i.e. if you enter PaloAlto as the FW Name, each firewall will be deployed as: PaloAlto0, PaloAlto1, PaloAlto2, etc.)"
			},
			"defaultValue": "PaloAltoFW"
		},
		"numberOfFirewalls": {
			"type": "int",
			"metadata": {
				"description": "Select the number of VM-Series firewalls to deploy.  Minimum is 1, maximum is 20."
			},
			"minValue": 1,
			"maxValue": 20,
      "defaultValue": 2
		},
		"virtualMachineSize": {
			"type": "string",
			"allowedValues": [
          "Standard_D3",
          "Standard_D4",
          "Standard_D3_v2",
          "Standard_D4_v2",
          "Standard_A4",
          "Standard_DS3_v2",
          "Standard_DS4_v2"
      ],
      "defaultValue": "Standard_D3_v2"
    },
    "imageSku": {
      "type": "string",
      "metadata": {
				"description": "Select BYOL, PAYG-Bundle1, or PAYG-Bundle2 (more info: https://azuremarketplace.microsoft.com/en-us/marketplace/apps/paloaltonetworks.vmseries-ngfw?tab=PlansAndPrice)"
			},
      "allowedValues": [
        "byol",
        "bundle1",
        "bundle2"
      ],
      "defaultValue": "byol"
    },
    "imageVersion": {
      "type": "string",
      "metadata": {
				"description": "Select the PAN-OS version to run.  Current recommended release is PAN-OS 8.0.7"
			},
      "allowedValues": [
        "latest",
        "8.0.0",
        "7.1.1"
      ],
      "defaultValue": "latest"
    },
		"osDiskStorageType": {
			"type": "string",
			"metadata": {
				"description": "Standard or Premium storage for OS disk (more info: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage) "
			},
			"allowedValues": [
				"Standard_LRS",
				"Premium_LRS"
			],
			"defaultValue": "Premium_LRS"
		},
		"firewallAvailabilitySetName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name for the availability set that the firewall(s) will be placed in."
			},
			"defaultValue": "Firewall-AV-Set"
		},
		"availabilitySetUpdateDomainCount": {
			"type": "int",
			"metadata": {
				"description": "Enter the name for the availability set that the firewall(s) will be placed in."
			},
			"defaultValue": 5
		},
		"availabilitySetFaultDomainCount": {
			"type": "int",
			"metadata": {
				"description": "Enter the name for the availability set that the firewall(s) will be placed in."
			},
			"defaultValue": 3
		},
		"mgmtPublicNicName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the management NIC.  In the Azure portal name will appear as [yourentry-firewallname#]"
			},
			"defaultValue": "pip-mgmt"
		},
		"mgmtSubnetNsgName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name for the Azure Network Security Group for the management subnet."
			},
			"defaultValue": "mgmt-subnet-nsg"
		},
		"mgmtDNSLabelPrefix": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of DNS label for the public IP's management address.  This must be a globally unique name."
			}
		},
		"mgmtNicName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the management NIC.  In the Azure portal name will appear as [yourentry-firewallname#]"
			},
			"defaultValue": "mgmt-nic"
		},
		"untrustNicName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name for the firewall's untrust NIC.  In the Azure portal name will appear as {your_entry}-{firewallname}#"
			},
			"defaultValue": "untrust-nic"
		},
		"trustNicName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name for the firewall's trust NIC.  In the Azure portal, the name will appear as {your_entry}-{firewallname}#"
			},
			"defaultValue": "trust-nic"
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Enter username for the firewall's administrator account."
			} 
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Enter password for the firewall's administrator account."
			}
		},
		"virtualNetworkRGName": {
			"type": "string",
			"metadata": {
				"description": "Enter the VNET's existing resource group name"
			}
		},
		"virtualNetworkName": {
			"type": "string",
			"metadata": {
				"description": "Enter the existing VNET name to deploy the firewalls"
			}
		},
		"mgmtSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the existing subnet where the firewall's management interface will reside"
			}
		},
		"untrustSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the existing subnet where the firewall's untrust interface will reside."
			}
		},
		"trustSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name of the existing subnet where the firewall's trust interface will reside."
			}
		},
		"internalLBName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name for the internal standard load balancer."
			},
			"defaultValue": "Internal-Standard-LB"
		},
		"internalLBFrontEndName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name for the internal load balancer's front end IP."
			},
			"defaultValue": "Internal-LB-Frontend"
		},
		"internalLBBackendPoolName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name for the load balancer's backend pool.  This will be the Trust interfaces of the firewall(s)."
			},
			"defaultValue": "Internal-LB-Backend-Pool"
		},
		"internalLBFrontEndIP": {
			"type": "string",
			"metadata": {
				"description": "Enter the load balancer's front end IP address.  Must be in the same subnet as the 'Internal LB Subnet Name'"
			}
		},
		"internalLBSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Enter the subnet that will contain the internal load balancer's front end IP."
			}
		},
		"internalLBProbeName": {
			"type": "string",
			"metadata": {
				"description": "Enter the name for the load balancer's health probe name."
			},
			"defaultValue": "TCP-Health-Probe"
		},
		"internalLBProbePort": {
			"type": "int",
			"metadata": {
				"description": "Enter the TCP port that the Load Balancer's health probe will use to monitor the health of the firewall(s)."
			},
			"defaultValue": 22
		},
		"internalLBRuleHA": {
			"type": "string",
			"metadata": {
				"description": "Enter a name for the load balancer rule that will allow HA ports."
			},
			"defaultValue": "LB-Rule-HA-Ports"
		},
		"publicLBName": {
			"type": "string",
      "defaultValue": "LB-Rule-HA-Ports"
    },
    "publicLBFrontEndName": {
      "type": "string",
      "defaultValue": "Internal-LB-Frontend",
    },
    "publicLBBackendPoolName": {
      "type": "string",
      "defaultValue": "",
    },
		"publicLBIpName": {
      "type": "string",
			"defaultValue": "Internal-Standard-LB",
    },
    "publicLBProbeName": {
      "type": "string",
      "defaultValue": "",
    },
    "publicLBProbePort": {
      "type": "int",
      "defaultValue": "",   
    },
    "publicLBRuleName": {
      "type": "string",
      "defaultValue": "",
    },
    "publicLBRuleFrontendPort": {
      "type": "int",
      "defaultValue": "",
    },
    "publicLBRuleBackendPort": {
      "type": "int",
      "defaultValue": "",
    }
	},
	"variables": {
		"vnetId": "[resourceId(parameters('virtualNetworkRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
		"mgmtSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('mgmtSubnetName'))]",
		"mgmtPublicNicNameRef": "[concat(parameters('mgmtPublicNicName'),'-',parameters('firewallName'))]",
		"mgmtNicNameRef": "[concat(parameters('mgmtNicName'),'-',parameters('firewallName'))]",
		"untrustNicNameRef": "[concat(parameters('untrustNicName'),'-',parameters('firewallName'))]",		
		"trustNicNameRef": "[concat(parameters('trustNicName'),'-',parameters('firewallName'))]",
		"untrustSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('untrustSubnetName'))]",
		"trustSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('trustSubnetName'))]",
		"imagePublisher": "paloaltonetworks",
		"imageOffer": "vmseries1",
		"internalLBProbeProtocol": "TCP",
		"_artifactsLocationSasToken": "",
		"_artifactsLocation": "https://raw.githubusercontent.com/mattmclimans/PaloAltoNetworks/master/azure/nested/",
		"dynamicToStatic-PublicNic_templateUri": "[concat(variables('_artifactsLocation'), 'dynamicToStatic-PublicNic.json', variables('_artifactsLocationSasToken'))]",
		"nsgToSubnet_templateUri": "[concat(variables('_artifactsLocation'), 'ApplyNsgToSubnet.json', variables('_artifactsLocationSasToken'))]",
		"dynamicToStatic-LBprivate_templateUri": "[concat(variables('_artifactsLocation'), 'dynamicToStatic-LBprivate.json', variables('_artifactsLocationSasToken'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[parameters('firewallAvailabilitySetName')]",
			"apiVersion": "2016-08-30",
			"location": "[resourceGroup().location]",
			"properties": {
				"platformFaultDomainCount": "[parameters('availabilitySetFaultDomainCount')]",
				"platformUpdateDomainCount": "[parameters('availabilitySetUpdateDomainCount')]"
			},
			"sku": {
				"name": "Aligned"
			}
		}, 
		{
			"type": "Microsoft.Network/loadBalancers",
			"name": "[parameters('internalLBName')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"frontendIPConfigurations": [{
						"name": "[parameters('internalLBFrontEndName')]",
						"properties": {
							"privateIPAddress": "[parameters('internalLBFrontEndIP')]",
							"privateIPAllocationMethod": "Static",
							"subnet": {
								"id": "[concat(variables('vnetId'), '/subnets/', parameters('internalLBSubnetName'))]"
							}
						}
					}
				],
				"backendAddressPools": [{
						"name": "[parameters('internalLBBackendPoolName')]"
					}
				],
				"loadBalancingRules": [{
						"name": "[parameters('internalLBRuleHA')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), '/frontendIpConfigurations/', parameters('internalLBFrontEndName'))]"
							},
							"frontendPort": 0,
							"backendPort": 0,
							"enableFloatingIP": true,
							"idleTimeoutInMinutes": 4,
							"protocol": "All",
							"loadDistribution": "Default",
							"disableOutboundSnat": false,
							"backendAddressPool": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), '/backendAddressPools/', parameters('internalLBBackendPoolName'))]"
							},
							"probe": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), '/probes/', parameters('internalLBProbeName'))]"
							}
						}
					}
				],
				"probes": [{
						"name": "[parameters('internalLBProbeName')]",
						"properties": {
							"protocol": "[variables('internalLBProbeProtocol')]",
							"port": "[parameters('internalLBProbePort')]",
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				],
				"inboundNatRules": [],
				"outboundNatRules": [],
				"inboundNatPools": []
			}
		},
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicLBIpName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[parameters('publicLBName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
						"dependsOn": [
							"[parameters('publicLBIpName')]"
						],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[parameters('publicLBFrontEndName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicLBIpName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('publicLBBackendPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[parameters('publicLBRuleName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('publicLBName')), '/frontendIpConfigurations/', parameters('publicLBFrontEndName'))]"
                            },
                            "frontendPort": "[parameters('publicLBRuleFrontendPort')]",
                            "backendPort": "[parameters('publicLBRuleBackendPort')]",
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('publicLBName')), '/backendAddressPools/', parameters('publicLBBackendPoolName'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('publicLBName')), '/probes/', parameters('publicLBProbeName'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[parameters('publicLBProbeName')]",
                        "properties": {
                            "protocol": "TCP",
                            "port": "[parameters('publicLBProbePort')]",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundNatRules": [],
                "inboundNatPools": []
            }
        },
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[parameters('mgmtSubnetNsgName')]",
			"location": "[resourceGroup().location]",
			"apiVersion": "2018-03-01",
			"properties": {
				"securityRules": [{
						"name": "HTTPS",
						"properties": {
							"description": "Allows HTTPS traffic to management subnet.",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "443",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					}, {
						"name": "SSH",
						"properties": {
							"description": "Allows SSH to management subnet.",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "22",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 200,
							"direction": "Inbound"
						}
					}
				]
			}
		}, 
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('mgmtNicNameRef'),copyindex())]",
			"apiVersion": "2016-03-30",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "mgmtNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"ipConfigurations": [{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('mgmtSubnetRef')]"
							}
						}
					}
				]
			}
		}, 
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('untrustNicNameRef'),copyindex())]",
			"apiVersion": "2016-03-30",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"mgmtNicLoop"
			],
			"copy": {
				"name": "untrustNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"ipConfigurations": [{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('untrustSubnetRef')]"
							}
						}
					}
				]
			}
		}, 
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('trustNicNameRef'),copyindex())]",
			"apiVersion": "2016-03-30",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"untrustNicLoop"
			],
			"copy": {
				"name": "trustNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"ipConfigurations": [{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('trustSubnetRef')]"
							}
						}
					}
				]
			}
		}, 
		{
			"type": "Microsoft.Resources/deployments",
			"name": "[concat('updateMgmtNic',copyindex())]",
			"apiVersion": "2017-08-01",
			"dependsOn": [
				"trustNicLoop"
			],
			"copy": {
				"name": "mgmtStaticNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('dynamicToStatic-PublicNic_templateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"nicName": {
						"value": "[concat(variables('mgmtNicNameRef'),copyindex())]"
					},
					"subnetRef": {
						"value": "[variables('mgmtSubnetRef')]"
					},
					"privateIp": {
						"value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('mgmtNicNameRef'),copyindex())).ipConfigurations[0].properties.privateIPAddress]"
					},
					"publicIpName": {
						"value": "[concat(variables('mgmtPublicNicNameRef'),copyindex())]"
					},
					"publicIpDnsName": {
						"value": "[concat(parameters('mgmtDNSLabelPrefix'),copyindex())]"
					}
				}
			}
		}, 
		{
			"type": "Microsoft.Resources/deployments",
			"name": "[concat('updateUntrustNic',copyindex())]",
			"apiVersion": "2017-08-01",
			"dependsOn": [
				"mgmtStaticNicLoop"
			],
			"copy": {
				"name": "untrustStaticNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('dynamicToStatic-LBprivate_templateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"nicName": {
						"value": "[concat(variables('untrustNicNameRef'),copyindex())]"
					},
					"subnetRef": {
						"value": "[variables('untrustSubnetRef')]"
					},
					"privateIp": {
						"value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('untrustNicNameRef'),copyindex())).ipConfigurations[0].properties.privateIPAddress]"
					},
					"lbName": {
						"value": "[parameters('publicLBName')]"
					},
					"lbBackendPoolName": {
						"value": "[parameters('publicLBBackendPoolName')]"
					}
				}
			}
		}, 
		{
			"type": "Microsoft.Resources/deployments",
			"name": "[concat('updateTrustNic',copyindex())]",
			"apiVersion": "2017-08-01",
			"dependsOn": [
				"untrustStaticNicLoop"
			],
			"copy": {
				"name": "trustStaticNicLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('dynamicToStatic-LBprivate_templateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"nicName": {
						"value": "[concat(variables('trustNicNameRef'),copyindex())]"
					},
					"subnetRef": {
						"value": "[variables('trustSubnetRef')]"
					},
					"privateIp": {
						"value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('trustNicNameRef'),copyindex())).ipConfigurations[0].properties.privateIPAddress]"
					},
					"lbName": {
						"value": "[parameters('internalLBName')]"
					},
					"lbBackendPoolName": {
						"value": "[parameters('internalLBBackendPoolName')]"
					}
				}
			}
		}, 
		{
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(parameters('firewallName'),copyindex())]",
			"apiVersion": "2017-03-30",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "virtualMachineLoop",
				"count": "[parameters('numberOfFirewalls')]"
			},
			"dependsOn": [
				"trustStaticNicLoop"
			],
			"plan": {
				"name": "[parameters('imageSku')]",
				"product": "[variables('imageOffer')]",
				"publisher": "[variables('imagePublisher')]"
			},
			"properties": {
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('firewallAvailabilitySetName'))]"
				},
				"hardwareProfile": {
					"vmSize": "[parameters('virtualMachineSize')]"
				},
				"osProfile": {
					"computerName": "[concat(parameters('firewallName'), copyIndex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[parameters('imageSku')]",
						"version": "[parameters('imageVersion')]"

					},
					"osDisk": {
						"name": "[concat('os-disk-',parameters('firewallName'),copyindex())]",
						"managedDisk": {
							"storageAccountType": "[parameters('osDiskStorageType')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage",
						"diskSizeGB": 128
					}
				},
				"networkProfile": {
					"networkInterfaces": [{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('mgmtNicNameRef'),copyindex()))]",
							"properties": {
								"primary": true
							}
						}, {
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('untrustNicNameRef'),copyindex()))]",
							"properties": {
								"primary": false
							}
						}, {
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('trustNicNameRef'),copyindex()))]",
							"properties": {
								"primary": false
							}
						}
					]
				}
			}
		}
	]
}
